#Ryan Gallagher
#Problem 6 - HAMM

#Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t. See Figure 2.

#Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).

#Return: The Hamming distance dH(s,t).

sample_s = "GAGCCTACTAACGGGAT"
sample_t = "CATCGTAATGACGGCCT"

test_s = "GCACCTTCAGGCGTTTGTGAGATTGACCCACGTATTCGGGACTCCTTCGTATCGGCCTTTCCCGTACGGTAATGCAGATTCGCAACGAAAGCTGTGAGTGACGTGGCGTAAGTGTCGGGCCCGTTACAATCGAGTAGCCCGGTAAGGCGTTGAGGCTCCAAGCGATGGGAATGCGAGGGAGGTTTAAACTCCGTTACAAACAGAATGGAGGGGTGTTAAACCAGGTAATTCTACGGCATACGCTGATGTAATACAATAATAGTGCGGACACACCTCGTGGCGTCGCAATTTTGGCTCCTTTGTGCGCTGACGATCCCGAGTACGTTATCCTCCCTAAAACTCGACCCATGAAACAGTCGTCAGAAATCATTACATCTACAGACAGATAGTACGAGAAGGAGGGAAGTTAGGCAATTTTTACAAATCTAGCCGTAGCTCTTAGCCCAGAGTCCACTCCTGGCAGCAATAGAAAAGAAGTACTCACAAACAAGGCCTCATCTGATGCCATACTTCTGTGAGGGGAACGCTTTCGGCCTTCCCTTGCTTAAGCAATATCTAAAGTTATCGTCTGGTAATTCACCACGGCGTTCGGTCGGACGTTTTAGGTGGCGAAGATCATTCAGGACAGCGTAGGGCACTATGCGTTCCAGGCAAGACATTCAGTGTTGCTAATGTGCCTCTGCGAACTGAATCATGTGGCGACATGCGATACGCCAACCGCCGTCCCACTGGATACGCCGTTAGCTGAATGAAAATGAGTTCGATGGTAGAACCCCTTCGTTATTATCAGGAACCAACTTGAAATTCGGTAGTACCGCTGTGCTCTACAAGGCTACATTCAAACCTCCTGCTCTTGTGCCACAGATCGAGATGGCTACCCTTATCCTCAAAAATTGTCGTAAAGCTTACTGATCCCATCGCCCACTGTTTAAAACCTTTCCTACCGTAGGT"
test_t = "GAAGACGTATGCCCAAGACCGGTCTACCACCGCATTAGGTTGGCCTTCCTGCCGTTCTTTCCAGTACGGAAATGATGTTTCCCCACGTAACTTGAGCTAGGGTTAGCATGGTTGTCCGGGGGATGCCCTTCGTATCACCGGCGAAGGCCTTATGGCACCTGGCAATCAGTGCCCGGTTGAGGAGTTACATCCGACAACCAGATTATGGTGGGCCGTAAAGCTCGGACGGCCTCCTACAAAAGTTGATTTCCTTCACTATTTGCTCTCAATCACTTGGAGTTCTGTCAAATTTGTGCTCTTTATAATGCGGGGGTCTTGGGTACAATGCTCTCCCTCAGACTGAACCCAAACAGTGCGTGTTATATATCATTATCTCACAACTCATATTGCTCTCCATGGAGGGAAACTCGGCAAGTTATCTCGACGGATGGTGAAATTGCAGCACTGCGGCCCACAACGGCAACCGCAATACGGATGAGCTATCGCACGGCTCGTCATCTTATGAGATCAGCTTGAACTCAGTTCACTAATGCTTTAAAATTAGATACGCAACATCTAAAGTGTATTACGGATACTCGAACAGGGCGGACTGTAAGAGATCATGCCAATCGTAGCACGATTTGGTCAAAGTGTAGCAGAGGGGTATCCAGGAAGCGCACTGGGACATGACACAGTGCATCCTGTAAGTTGCGTATGACTCTATGTGCCGAGGGTAGGCCGGACAAAGACAGTTTACCACAATAGCTGAAAGTAATTGACATAGTGGGCTGTAACCCTTCACGAGTGGCGGGGAGCAACGTTCCGTCCGAGATTAGAGCTATGAACGATAAGAGTAGTACGAAGCGTTCGAAGCCACCAACACACAGTCGTAGGGCGTCACGGCCGTAGGCAACTAAGCAAGCAACATAACACCCCATGAGCCGAGTGTGTAAAAACGTAGGTGCTGTACTT"

def dh(s, t):
    s_list = list(s)
    t_list = list(t)

    if len(sample_s) != len(sample_t):
        raise Exception("Two DNA strings are not of equal length. Cannot compute Hamming Distance.")
    
    count = 0
    for i in range(0, len(s_list)):
        #print(f"{s_list[i]} compared to {t_list[i]}")
        if s_list[i] != t_list[i]:
            count += 1
    
    return print(count)






def main():
    return dh(test_s, test_t)

main()
